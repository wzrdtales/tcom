name: Train Auto Encoder
description: Trains Auto Encoder
inputs:
  - {name: Pickle file,  type: GCSPath,  description: 'GCS path containing tf-transformed training and eval data.'} # type: {GCSPath: {path_type: Directory}}
  - {name: Batch Size,                type: Integer, default: '64',      description: 'The batch size'} # type: {GCSPath: {data_type: JSON}}
  - {name: Learning rate,         type: Float, default: '0.1',              description: 'Learning rate for training.'}
  - {name: Optimizer,             type: String, default: 'Adagrad', description: 'Optimizer for training. Valid values are: Adam, SGD, Adagrad. If not provided, tf.estimator default will be used.'}
  - {name: Hidden layer size,     type: String, default: '100',             description: 'Comma-separated hidden layer sizes. For example "200,100,50".'}
  - {name: Steps,                 type: Integer,                            description: 'Maximum number of training steps to perform. If unspecified, will honor epochs.'}
  - {name: Epochs,                type: Integer, default: '500',               description: 'Maximum number of training data epochs on which to train. If both "steps" and "epochs" are specified, the training job will run for "steps" or "epochs", whichever occurs first.'}
  - {name: Encoding Dimension,                type: Integer, default: '100'.                              description: 'Encoding Dimension'}
  - {name: Training output dir,   type: GCSPath,  description: 'GCS or local directory.'} # type: {GCSPath: {path_type: Directory}}
outputs:
  - {name: Training output dir,   type: GCSPath,  description: 'GCS or local directory.'} # type: {GCSPath: {path_type: Directory}}
implementation:
  container:
    image: gitlab-registry.int.asip.cloud:443/fraud-ai/device-anomaly-score-v3:training
    command: [/entry.sh, -m, trainer.task]
    args: [
      --pickle-file, {inputValue: Pickle file},
      --batch-size, {inputValue: Batch Size},
      --learning-rate, {inputValue: Learning rate},
      --optimizer, {inputValue: Optimizer},
      --hidden-layer-size, {inputValue: Hidden layer size},
      --steps, {inputValue: Steps},
      --epochs, {inputValue: Epochs},
      --encoding-dim, {inputValue: Encoding Dimension},
      --job-dir, {inputValue: Training output dir},
    ]
    fileOutputs:
      Training output dir: /output.txt
